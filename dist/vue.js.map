{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名 <xxxx 匹配到的是开始 标签的名字\r\n\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配的是</xxxx> 最终匹配到的分组就是结束标签的名字\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 第一个分组就是属性的 key，value 就是分组3/分组4/分组5\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n// console.log(attribute);\r\nexport function parseHTML(html) {\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n  const stack = []; // 用于存放元素的\r\n  let currentParent; // 指向的是栈中的最后一个\r\n  let root;\r\n  // 最终需要转化成一颗抽象语法树\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    };\r\n  }\r\n\r\n  // 利用栈形结构 来构造一棵树\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs); // 创造一个 ast 节点\r\n    if (!root) {\r\n      // 看下是否为空树\r\n      root = node; // 如果为空则当前是树的根节点\r\n    }\r\n    if (currentParent) {\r\n      node.parent = currentParent; // 只赋予了 parent 属性\r\n      currentParent.children.push(node);\r\n    }\r\n    stack.push(node);\r\n    currentParent = node; // currentParent 为栈中的最后一个\r\n    // console.log(tag, attrs, \"开始\");\r\n  }\r\n  function chars(text) {\r\n    text = text.replace(/\\s/g, \"\"); // 如果空格超过两个以上 则删除2个以上的\r\n    // 文本直接放到当前指向的节点中\r\n    text &&\r\n      currentParent.children.push({\r\n        type: TEXT_TYPE,\r\n        text,\r\n        parent: currentParent,\r\n      });\r\n    // console.log(text, \"文本\");\r\n  }\r\n  function end(tag) {\r\n    let node = stack.pop(); // 弹出最后一个\r\n    currentParent = stack[stack.length - 1];\r\n    // console.log(tag, \"结束\");\r\n  }\r\n\r\n  function advance(n) {\r\n    html = html.substring(n);\r\n  }\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen);\r\n    // console.log(start); // ['<div', 'div', index: 0, input: '<div id=\"app\">\\n  ...... ]\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], // 标签名\r\n        attrs: [],\r\n      };\r\n      advance(start[0].length);\r\n      // console.log(html);\r\n\r\n      // 如果不是开始标签的结束 就一直匹配下去\r\n      let attr, end;\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        // console.log(attr); // [\"id=\\\"app\\\"\", id, \"=\", \"app\",....]\r\n        advance(attr[0].length);\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5] || true,\r\n        });\r\n      }\r\n      if (end) {\r\n        advance(end[0].length); // 移除 >\r\n      }\r\n      //   console.log(match);\r\n      return match;\r\n    }\r\n    return false;\r\n  }\r\n  // html 最开始肯定是一个 div\r\n  while (html) {\r\n    // 如果 textEnd 为 0 说明是一个开始标签或者结束标签\r\n    // 如果 textEnd > 0 说明就是文本的结束位置\r\n    let textEnd = html.indexOf(\"<\"); // 如果 indexOf 中的索引是 0 则说明是个标签\r\n    if (textEnd == 0) {\r\n      const startTagMatch = parseStartTag(); // 开始标签的匹配结果\r\n      if (startTagMatch) {\r\n        // 解析到的开始标签\r\n        // console.log(html);\r\n        start(startTagMatch.tagName, startTagMatch.attrs);\r\n        continue;\r\n      }\r\n      let endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        end(endTagMatch[1]);\r\n        continue;\r\n      }\r\n    }\r\n    if (textEnd > 0) {\r\n      let text = html.substring(0, textEnd); // 文本内容\r\n      if (text) {\r\n        chars(text);\r\n        advance(text.length);\r\n        // console.log(html);\r\n      }\r\n    }\r\n  }\r\n\r\n  return root;\r\n}\r\n","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n  let str = \"\"; // {name, value}\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    if (attr.name === \"style\") {\r\n      // color: red = {color: 'red'}\r\n      let obj = {};\r\n      attr.value.split(\";\").forEach((item) => {\r\n        let [key, value] = item.split(\":\");\r\n        obj[key.trim()] = value.trim();\r\n      });\r\n\r\n      attr.value = obj;\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n    // console.log(str);\r\n  }\r\n  return `{${str.slice(0, -1)}}`;\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\nfunction gen(node) {\r\n  if (node.type === 1) {\r\n    return codegen(node);\r\n  } else {\r\n    let text = node.text;\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`;\r\n    } else {\r\n      // _v(_s(name) + 'hello' + _s(name))\r\n      let tokens = [];\r\n      let match;\r\n      // 注意： 这里要处理只匹配第一个 {{}} 的问题\r\n      defaultTagRE.lastIndex = 0;\r\n      let lastIndex = 0;\r\n      while ((match = defaultTagRE.exec(text))) {\r\n        let index = match.index; // 匹配位置\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`);\r\n        lastIndex = index + match[0].length;\r\n      }\r\n\r\n      // 判断最后还有没有纯文本没有推入\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n      }\r\n      return `_v(${tokens.join(\"+\")})`;\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children) {\r\n  return children.map((child) => gen(child)).join(\",\");\r\n}\r\n\r\nfunction codegen(ast) {\r\n  // console.log(ast.children);\r\n  let children = genChildren(ast.children);\r\n  let code = `_c('${ast.tag}',${\r\n    ast.attrs.length > 0 ? genProps(ast.attrs) : \"null\"\r\n  }${ast.children.length > 0 ? `,${children}` : \"\"})`;\r\n\r\n  return code;\r\n}\r\n\r\n// 对模板进行编译\r\nexport function compileToFunction(template) {\r\n  // 1. 将 template 转换成 ast 语法树\r\n  let ast = parseHTML(template);\r\n\r\n  // 2. 生成 render 方法 ( render 方法执行后的放回的结果就是 虚拟 DOM)\r\n  // render(h){\r\n  //     return h('div',{id: 'app'},h('div',{style:{color:'red'}}, _v(_s(name) +'hello'),_c('span',undefined,_v(_s(age)))))\r\n  // }\r\n\r\n  let code = codegen(ast);\r\n  // 模板引擎的实现原理就是 with + new Function\r\n  code = `with(this){return ${code}};`;\r\n  let render = new Function(code); // 根据代码生成 render 函数\r\n\r\n  return render;\r\n}\r\n","export function initLifeCycle(Vue) {\r\n  Vue.prototype._update = function () {\r\n    console.log(\"update\");\r\n  };\r\n\r\n  Vue.prototype._render = function () {\r\n    console.log(\"render\");\r\n  };\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n  // 1. 调用 render 方法产生虚拟节点 虚拟dom\r\n  vm._update(vm._render()); // vm.$options.render() 虚拟节点\r\n  // 2. 根据虚拟 dom 生成真实 dom\r\n\r\n  // 3. 插入到 el 中\r\n}\r\n\r\n// vue 核心流程\r\n// 1）创建了响应式数据\r\n// 2）模板转换成 ast 树\r\n// 3）将 ast 语法树转换了 render 函数\r\n// 4）后续每次数据更新可以只执行 render 函数（无需再次执行 ast 转换过程）\r\n// render 函数会去产生虚拟节点（使用响应式数据）\r\n// 根据生成虚拟节点创造真实的 dom\r\n","// 重写数组中的部分方法\r\nlet oldArrayProto = Array.prototype; // 获取数组原型\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"reverse\", \"sort\", \"splice\"]; // concat slice 不改变原数组\r\n\r\nmethods.forEach((method) => {\r\n  // arr.push(1,2,3)\r\n  newArrayProto[method] = function (...args) {\r\n    // 重写数组方法\r\n    const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法，函数劫持 切片编程\r\n\r\n    // 需要对新增的数据再次进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__; // 这里的 this 指向 data，因为最后是 data 调用了数组里面的方法\r\n    // this.__ob__ 为 Observe 的实例\r\n    // console.log('this')\r\n    // console.log(this)\r\n    switch (method) {\r\n      case \"push\":\r\n      case \"unshift\":\r\n        inserted = args;\r\n        break;\r\n      case \"splice\":\r\n        inserted = args.slice(2);\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (inserted) {\r\n      // 对新增内容再次观测\r\n      ob.observeArray(inserted);\r\n    }\r\n    return result;\r\n  };\r\n});\r\n","import { newArrayProto } from \"./array\";\r\n\r\nclass Observer {\r\n  constructor(data) {\r\n    // Object.defineProperty 只能劫持已经存在的属性(vue里面会为此单独写一些api $set $delete)\r\n    // 给数据加了一个标识 如果数据上有 __ob__ 则说明这个属性被观测过了\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      value: this, // 这个 this 为 Observer 实例\r\n      enumerable: false, // 将 __ob__ 变成不可枚举(循环的时候无法获取到)\r\n    });\r\n    // data.__ob__ = this;\r\n    if (Array.isArray(data)) {\r\n      // 这里我们可以重写数组中的方法 7个变异方法 时可以修改数组本身的\r\n      // console.log(data);\r\n      data.__proto__ = newArrayProto;\r\n      this.observeArray(data); // 如果数组中放置的是对象，可以监控到对象的变化\r\n    } else {\r\n      this.walk(data);\r\n    }\r\n  }\r\n  walk(data) {\r\n    // 循环对象 对属性依次劫持\r\n    // \"重新定义\"属性 性能差\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\r\n  }\r\n\r\n  observeArray(data) {\r\n    data.forEach((item) => observe(item));\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n  observe(value); // 对所有的对象都进行属性劫持\r\n  // 闭包 属性劫持\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      //   console.log(value);\r\n      // 取值的时候 会执行 get\r\n      return value;\r\n    },\r\n    // 修改的时候 会执行set\r\n    set(newValue) {\r\n      if (newValue === value) return;\r\n      observe(newValue); // newValue为object时需要重新绑定\r\n      value = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  if (typeof data !== \"object\" || data == null) {\r\n    return; // 只对对象进行劫持\r\n  }\r\n\r\n  if (data.__ob__ instanceof Observer) {\r\n    // 说明对象已经被检测过\r\n    return data.__ob__;\r\n  }\r\n  // 如果一个对象被劫持过了，那就不需要在劫持了\r\n  // （要判断一个对象是否被劫持过，可以增加一个实例，\r\n  // 用实例来判断是否被劫持过）\r\n\r\n  return new Observer(data);\r\n}\r\n","import { observe } from \"./observe/index\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options; // 获取所有的选项\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key];\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data; //data 可能是函数和对象\r\n\r\n  data = typeof data === \"function\" ? data.call(vm) : data;\r\n  vm._data = data; // 我将返回的对象放到了_data上\r\n  // 对数据进行劫持 vue2 里采用了一个 api defineProperty\r\n  observe(data);\r\n\r\n  // 将vm._data 用vm来代理就可以了\r\n  for (let key in data) {\r\n    proxy(vm, \"_data\", key);\r\n  }\r\n}\r\n","import { compileToFunction } from \"./compiler/index\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    // vue vm.$options 就是获取用户配置\r\n\r\n    // 我们使用 Vue 的时候 $nextTick $data $attr ....\r\n    const vm = this;\r\n    vm.$options = options;\r\n\r\n    // 初始化状态\r\n    initState(vm);\r\n\r\n    if (options.el) {\r\n      vm.$mount(options.el);\r\n    }\r\n  };\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    el = document.querySelector(el);\r\n    let ops = vm.$options;\r\n    if (!ops.render) {\r\n      // 先进行查找有没有 render 函数\r\n      let template; // 没有 render 看一下是否写了 template, 没写 template 采用外部的 template\r\n      if (!ops.template && el) {\r\n        // 没有写模板但是写了 el\r\n        template = el.outerHTML;\r\n      } else {\r\n        if (el) {\r\n          template = ops.template;\r\n        }\r\n      }\r\n      if (template && el) {\r\n        const render = compileToFunction(template);\r\n        ops.render = render; // jsx 最终会被编译成 h('xxx')\r\n      }\r\n      // console.log(template);\r\n    }\r\n    // ops.render; // 最终可以获取 render 方法\r\n\r\n    mountComponent(vm, el); // 组件挂载\r\n\r\n    // script 标签引用的 vue.global.js 这个编译过程是在浏览器运行的\r\n    // runtime 是不包含模板编译的, 整个编译时打包的时候通过 loader 来转义 .vue 文件的，用 runtime 的时候不能使用 template\r\n  };\r\n}\r\n","import { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) {\r\n  this._init(options);\r\n}\r\n\r\ninitMixin(Vue);\r\ninitLifeCycle(Vue);\r\n\r\nexport default Vue;\r\n"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","trim","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","initLifeCycle","Vue","prototype","_update","console","log","_render","mountComponent","vm","el","oldArrayProto","Array","newArrayProto","Object","create","methods","method","_oldArrayProto$method","_len","arguments","args","_key","result","call","apply","inserted","ob","__ob__","observeArray","Observer","data","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","keys","defineReactive","observe","target","get","set","newValue","_typeof","initState","opts","$options","initData","proxy","_data","initMixin","_init","options","$mount","document","querySelector","ops","outerHTML"],"mappings":"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"}